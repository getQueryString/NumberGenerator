# Pre-generated by ChatGPT, edited and improved by getQueryString/Fin

import os
import random
from pathlib import Path


class NumberGenerator:
    def __init__(self):
        pass

    OUTPUT_FILE = os.path.join(Path.home(), "Desktop", "output.txt")  # e. g. (C:/Users/TEST/Desktop/output.txt)

    amount_of_numbers = 1000

    def generate_random_number(self):
        prefix = ["1573", "1575", "1577", "1578", "163", "177", "178", "1511", "1512", "1514", "1515", "1516", "1517",
                  "160", "170", "171", "175", "1520", "1522", "1523", "1525", "1526", "162", "172", "173", "174",
                  "1590", "176", "179"]
        random_prefix = random.choice(prefix)
        random_prefix_length = len(str(random_prefix))

        number_length = 12 if random_prefix_length == 4 else 11

        # Generate the remaining digits of the number
        remaining_digits = [random.randint(0, 9) for _ in
                            range(number_length - random_prefix_length + (1 if random_prefix_length == 3 else 0))]

        # Concatenate all parts to form the complete number (in total 13 digits)
        number = "+49" + random_prefix + "".join(map(str, remaining_digits))

        return number

    def start(self):
        with open(self.OUTPUT_FILE, "w+") as file:
            for number in range(self.amount_of_numbers):
                # if number is valid:
                file.write(self.generate_random_number() + "\n")
                # else:
                # amount_of_numbers += 1


if __name__ == "__main__":
    number_generator = NumberGenerator()
    number_generator.start()
